{"version":3,"sources":["Component/Todo.js","Component/TodoList.js","Component/Formbox.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","todoList","setTodoList","className","completed","text","onClick","map","item","id","filter","e","TodoList","filterTodoList","Formbox","saveTodo","inputText","setInputText","setStatus","class","type","value","onChange","target","preventDefault","onSubmitHandler","name","App","useState","status","setFilterTodoList","useEffect","getLocalStorage","handleFilter","saveLocalStorage","localStorage","getItem","JSON","parse","setItem","stringify","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b85c20f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Todo = ({ todo, todoList, setTodoList }) => {\r\n    const onDeleteHandler = () => {\r\n        setTodoList(todoList.filter((e) => e.id !== todo.id));\r\n    }\r\n\r\n    const onCompleteHandler = () => {\r\n        setTodoList(todoList.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n    return (\r\n        <div className='todo'>\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{todo.text}</li>\r\n            <button className=\"complete-btn\" onClick={onCompleteHandler}><i className=\"fas fa-check\"></i></button>\r\n            <button className=\"trash-btn\" onClick={onDeleteHandler}><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\nconst TodoList = ({ todoList, setTodoList, filterTodoList }) => {\r\n    return (\r\n        <div className='todo-container'>\r\n            <ul className='todo-list'>\r\n                {filterTodoList.map((todo) => <Todo todo={todo} key={todo.id} todoList={todoList} setTodoList={setTodoList} />)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport { Button, Input } from 'reactstrap';\r\n\r\nconst Formbox = ({ saveTodo, inputText, setInputText, setStatus }) => {\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    function onSubmitHandler(e){\r\n        saveTodo(inputText);\r\n        e.preventDefault();\r\n    }\r\n\r\n    const onDropdownChange = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <form class=\"form-inline\">\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" className=\"todo-input\" value={inputText} onChange={inputTextHandler} />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button className=\"todo-button\" type=\"submit\" onClick={e => (!inputText) ? e.preventDefault() : onSubmitHandler(e)}>\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div className=\"select\">\r\n                    <select name=\"todos\" className=\"filter-todo\" onChange={onDropdownChange}>\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"completed\">Completed</option>\r\n                        <option value=\"uncompleted\">Uncompleted</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Formbox;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TodoList from './Component/TodoList'\nimport Formbox from './Component/Formbox'\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todoList, setTodoList] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filterTodoList, setFilterTodoList] = useState(todoList);\n\n  useEffect(() => { getLocalStorage() }, [])\n  useEffect(() => { handleFilter(); saveLocalStorage() }, [status, todoList]);\n\n  const getLocalStorage = () => {\n    if (localStorage.getItem('todoList') != null) {\n      setTodoList(JSON.parse(localStorage.getItem('todoList')));\n    }\n  }\n\n  const saveLocalStorage = () => {\n    if (localStorage.getItem('todoList') === null) {\n      localStorage.setItem('todoList', JSON.stringify([]));\n    }\n    else (\n      localStorage.setItem('todoList', JSON.stringify(todoList))\n    )\n  }\n\n  const saveTodo = (inputText) => {\n    setTodoList([\n      ...todoList, { text: inputText, completed: false, id: todoList.length + 1 }\n    ]);\n    setInputText(\"\");\n  }\n\n  const handleFilter = () => {\n    switch (status) {\n      case 'completed': setFilterTodoList(todoList.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted': setFilterTodoList(todoList.filter(todo => todo.completed === false));\n        break;\n      case 'all': setFilterTodoList(todoList);\n        break;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>ToDo</h1>\n      </header>\n      <Formbox saveTodo={saveTodo} inputText={inputText} setInputText={setInputText} setStatus={setStatus} />\n      <TodoList todoList={todoList} setTodoList={setTodoList} filterTodoList={filterTodoList} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}